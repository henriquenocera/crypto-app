{"version":3,"sources":["images/cryptocurrency.png","components/Navbar.jsx","components/Loader.jsx","services/cryptoApi.js","components/Homepage.jsx","components/Cryptocurrencies.jsx","components/LineChart.jsx","components/CryptoDetails.jsx","components/Exchanges.jsx","services/cryptoNewsApi.js","components/News.jsx","App.js","app/store.js","index.js"],"names":["Navbar","useState","activeMenu","setActiveMenu","screenSize","setScreenSize","useEffect","handleResize","window","innerWidth","addEventListener","removeEventListener","className","src","icon","size","Title","level","to","onClick","MenuOutlined","theme","Item","HomeOutlined","FundOutlined","MoneyCollectOutlined","BulbOutlined","Loader","cryptoApiHeaders","createRequest","url","headers","cryptoApi","createApi","reducerPath","baseQuery","fetchBaseQuery","baseUrl","endpoints","builder","getCryptos","query","count","getExchanges","getCryptoDetails","coinId","getCryptoHistory","timePeriod","useGetCryptosQuery","useGetCryptoDetailsQuery","useGetCryptoHistoryQuery","useGetExchangesQuery","Typography","Homepage","data","isFetching","globalStats","stats","console","log","span","title","value","total","millify","totalExchanges","totalMarketCap","total24hVolume","totalMarkets","simplified","Cryptocurrencies","cryptosList","cryptos","setCryptos","searchTerm","setSearchTerm","filteredData","coins","filter","coin","name","toLowerCase","includes","placeholder","onChange","e","target","gutter","map","currency","xs","sm","lg","id","rank","extra","iconUrl","hoverable","price","marketCap","change","LineChart","coinHistory","currentPrice","coinName","coinPrice","coinTimestamp","i","history","length","push","Date","timestamp","toLocaleDateString","labels","datasets","label","fill","backgroundColor","borderColor","options","scales","yAxes","ticks","beginAtZero","Text","Option","Select","CryptoDetails","useParams","setTimePeriod","cryptoDetails","DollarCircleOutlined","NumberOutlined","volume","ThunderboltOutlined","allTimeHigh","TrophyOutlined","genericStats","numberOfMarkets","numberOfExchanges","approvedSupply","CheckOutlined","StopOutlined","ExclamationCircleOutlined","totalSupply","circulatingSupply","slug","defaultValue","date","HTMLReactParser","description","links","link","type","href","rel","Panel","Collapse","Exchanges","exchangesList","exchanges","exchange","showArrow","header","marketShare","cryptoNewsHeader","cryptoNewsApi","getCryptoNews","newsCategory","useGetCryptoNewsQuery","demoImage","News","setNewsCategory","cryptoNews","showSearch","optionFilterProp","filterOption","input","option","children","tolowerCase","indexOf","news","style","maxWidth","maxHeight","image","thumbnail","contentUrl","alt","substring","provider","moment","datePublished","startOf","fromNow","App","exact","path","color","textAlign","configureStore","reducer","ReactDOM","render","store","document","getElementById"],"mappings":"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","file":"static/js/main.35f2f9b2.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/cryptocurrency.1548aced.png\";","import React, { useState, useEffect } from 'react'\r\nimport { Button, Menu, Typography, Avatar } from 'antd';\r\nimport { Link } from 'react-router-dom';\r\nimport { HomeOutlined, MoneyCollectOutlined, BulbOutlined, FundOutlined, MenuOutlined } from '@ant-design/icons'\r\nimport icon from '../images/cryptocurrency.png';\r\n\r\nconst Navbar = () => {\r\n    const [activeMenu, setActiveMenu] = useState(true);\r\n    const [screenSize, setScreenSize] = useState(null);\r\n\r\n    useEffect(() => {\r\n        const handleResize = () => setScreenSize(window.innerWidth);\r\n\r\n        window.addEventListener('resize', handleResize);\r\n\r\n        handleResize();\r\n\r\n        return () => window.removeEventListener('resize', handleResize)\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        if (screenSize < 768) {\r\n            setActiveMenu(false)\r\n        } else {\r\n            setActiveMenu(true)\r\n        }\r\n    }, [screenSize])\r\n\r\n    return (\r\n        <div className=\"nav-container\">\r\n            <div className=\"logo-container\">\r\n                <Avatar src={icon} size=\"large\" />\r\n                <Typography.Title level={2} className=\"logo\">\r\n                    <Link to=\"/\">Crytoverse</Link>\r\n                </Typography.Title>\r\n                <Button className=\"menu-control-container\" onClick={() => setActiveMenu(!activeMenu)}>\r\n                    <MenuOutlined />\r\n                </Button>\r\n            </div>\r\n            {activeMenu && (\r\n                <Menu theme=\"dark\">\r\n                    <Menu.Item icon={<HomeOutlined />}>\r\n                        <Link to=\"/\">Home</Link>\r\n                    </Menu.Item>\r\n                    <Menu.Item icon={<FundOutlined />}>\r\n                        <Link to=\"/cryptocurrencies\">Cryptocurrencies</Link>\r\n                    </Menu.Item>\r\n                    <Menu.Item icon={<MoneyCollectOutlined />}>\r\n                        <Link to=\"/exchanges\">Exchanges</Link>\r\n                    </Menu.Item>\r\n                    <Menu.Item icon={<BulbOutlined />}>\r\n                        <Link to=\"/news\">News</Link>\r\n                    </Menu.Item>\r\n                </Menu>\r\n            )}\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Navbar\r\n","import React from 'react'\r\nimport { Spin } from 'antd'\r\n\r\nconst Loader = () => {\r\n    return (\r\n        <div className=\"loader\">\r\n            <Spin />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Loader\r\n","import { createApi, fetchBaseQuery } from \"@reduxjs/toolkit/query/react\";\r\n\r\nconst cryptoApiHeaders = {\r\n  \"x-rapidapi-host\": \"coinranking1.p.rapidapi.com\",\r\n  \"x-rapidapi-key\": \"99ec60ba35msh49bc91086f1ef35p15f761jsn080e972bb370\",\r\n};\r\n\r\nconst baseUrl = \"https://coinranking1.p.rapidapi.com\";\r\n\r\nconst createRequest = (url) => ({ url, headers: cryptoApiHeaders });\r\n\r\nexport const cryptoApi = createApi({\r\n  reducerPath: \"cryptoApi\",\r\n  baseQuery: fetchBaseQuery({ baseUrl }),\r\n  endpoints: (builder) => ({\r\n    getCryptos: builder.query({\r\n      query: (count) => createRequest(`/coins?limit=${count}`),\r\n    }),\r\n    getExchanges: builder.query({\r\n      query: () => createRequest(`/exchanges`),\r\n    }),\r\n    getCryptoDetails: builder.query({\r\n      query: (coinId) => createRequest(`/coin/${coinId}`),\r\n    }),\r\n    getCryptoHistory: builder.query({\r\n      query: ({ coinId, timePeriod }) =>\r\n        createRequest(`/coin/${coinId}/history/${timePeriod}`),\r\n    }),\r\n  }),\r\n});\r\n\r\nexport const {\r\n  useGetCryptosQuery,\r\n  useGetCryptoDetailsQuery,\r\n  useGetCryptoHistoryQuery,\r\n  useGetExchangesQuery,\r\n} = cryptoApi;\r\n","import React from 'react';\r\nimport millify from 'millify';\r\nimport { Typography, Row, Col, Statistic } from 'antd';\r\nimport { Link } from 'react-router-dom';\r\nimport Loader from './Loader';\r\n\r\nimport { useGetCryptosQuery } from '../services/cryptoApi'\r\nimport { Cryptocurrencies, News } from '../components';\r\n\r\nconst { Title } = Typography;\r\n\r\nconst Homepage = () => {\r\n    const { data, isFetching } = useGetCryptosQuery(10);\r\n    const globalStats = data?.data?.stats;\r\n    console.log(data);\r\n\r\n    if (isFetching) return <Loader />;\r\n    return (\r\n        <>\r\n            <Title level={2} className=\"heading\">Global Crypto Stats</Title>\r\n            <Row>\r\n                <Col span={12}>\r\n                    <Statistic title=\"Total Cryptocurrencies\" value={globalStats.total} />\r\n                </Col>\r\n                <Col span={12}>\r\n                    <Statistic title=\"Total Exchanges\" value={millify(globalStats.totalExchanges)} />\r\n                </Col>\r\n                <Col span={12}>\r\n                    <Statistic title=\"Total Market Cap\" value={millify(globalStats.totalMarketCap)} />\r\n                </Col>\r\n                <Col span={12}>\r\n                    <Statistic title=\"Total 24h Volume\" value={millify(globalStats.total24hVolume)} />\r\n                </Col>\r\n                <Col span={12}>\r\n                    <Statistic title=\"Total Markets\" value={millify(globalStats.totalMarkets)} />\r\n                </Col>\r\n\r\n            </Row>\r\n            <div className=\"home-heading-container\">\r\n                <Title level={2} className=\"home-title\">Top 10 Cryptocurrencies in the World</Title>\r\n                <Title level={3} className=\"show-more\"><Link to=\"/cryptocurrencies\">Show More</Link></Title>\r\n            </div>\r\n            <Cryptocurrencies simplified />\r\n\r\n            <div className=\"home-heading-container\">\r\n                <Title level={2} className=\"home-title\">Latest Crypto News</Title>\r\n                <Title level={3} className=\"show-more\"><Link to=\"/news\">Show More</Link></Title>\r\n            </div>\r\n            <News simplified />\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Homepage\r\n","import React, { useState, useEffect } from 'react'\r\nimport millify from 'millify'\r\nimport { Link } from 'react-router-dom'\r\nimport { Card, Row, Col, Input } from 'antd'\r\nimport Loader from './Loader'\r\n\r\nimport { useGetCryptosQuery } from '../services/cryptoApi'\r\n\r\nconst Cryptocurrencies = ({ simplified }) => {\r\n    const count = simplified ? 10 : 100;\r\n    const { data: cryptosList, isFetching } = useGetCryptosQuery(count);\r\n    const [cryptos, setCryptos] = useState([]);\r\n    const [searchTerm, setSearchTerm] = useState('');\r\n\r\n    useEffect(() => {\r\n        const filteredData = cryptosList?.data?.coins.filter((coin) => coin.name.toLowerCase().includes(searchTerm.toLowerCase()))\r\n\r\n        setCryptos(filteredData);\r\n    }, [cryptosList, searchTerm])\r\n\r\n    if (isFetching) return <Loader />;\r\n    return (\r\n        <>\r\n            {!simplified && (\r\n                <div className=\"search-crypto\">\r\n                    <Input placeholder=\"Search Cryptocurrency\" onChange={(e) => setSearchTerm(e.target.value)} />\r\n                </div>\r\n            )}\r\n            <Row gutter={[32, 32]} className=\"crypto-card-container\">\r\n                {cryptos?.map((currency) => (\r\n                    <Col xs={24} sm={12} lg={6} className=\"crypto-card\" key={currency.id}>\r\n                        <Link to={`/crypto/${currency.id}`}>\r\n                            <Card title={`${currency.rank}. ${currency.name}`} extra={<img className=\"crypto-image\" src={currency.iconUrl} />} hoverable>\r\n                                <p>Price: {millify(currency.price)}</p>\r\n                                <p>Market Cap: {millify(currency.marketCap)}</p>\r\n                                <p>Daily Change: {millify(currency.change)}</p>\r\n                            </Card>\r\n                        </Link>\r\n                    </Col>\r\n                ))}\r\n            </Row>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Cryptocurrencies\r\n","import React from 'react'\r\nimport { Line } from 'react-chartjs-2'\r\nimport { Col, Row, Typography } from 'antd'\r\n\r\nconst { Title } = Typography;\r\n\r\nconst LineChart = ({ coinHistory, currentPrice, coinName }) => {\r\n    const coinPrice = [];\r\n    const coinTimestamp = [];\r\n\r\n    for (let i = 0; i < coinHistory?.data?.history?.length; i += 1) {\r\n        coinPrice.push(coinHistory.data.history[i].price)\r\n        coinTimestamp.push(new Date(coinHistory.data.history[i].timestamp).toLocaleDateString());\r\n    }\r\n\r\n    const data = {\r\n        labels: coinTimestamp,\r\n        datasets: [\r\n            {\r\n                label: 'Price in USD',\r\n                data: coinPrice,\r\n                fill: false,\r\n                backgroundColor: '#0071bd',\r\n                borderColor: '#0071bd'\r\n            }\r\n        ]\r\n    }\r\n\r\n    const options = {\r\n        scales: {\r\n            yAxes: [\r\n                {\r\n                    ticks: {\r\n                        beginAtZero: true\r\n                    }\r\n                }\r\n            ]\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Row className=\"chart-header\">\r\n                <Title level={2} className=\"chart-title\">{coinName} Price Chart</Title>\r\n                <Col className=\"price-container\">\r\n                    <Title level={5} className=\"price-change\">{coinHistory?.data?.change}%</Title>\r\n                    <Title level={5} className=\"current-price\">Current {coinName} Price: $ {currentPrice}</Title>\r\n                </Col>\r\n            </Row>\r\n            <Line data={data} options={options} />\r\n        </>\r\n    )\r\n}\r\nexport default LineChart\r\n\r\n\r\n","import React, { useState } from 'react'\r\nimport HTMLReactParser from 'html-react-parser'\r\nimport { useParams } from 'react-router-dom'\r\nimport millify from 'millify'\r\nimport { Col, Row, Typography, Select } from 'antd'\r\nimport { MoneyCollectOutlined, DollarCircleOutlined, FundOutlined, ExclamationCircleOutlined, StopOutlined, TrophyOutlined, CheckOutlined, NumberOutlined, ThunderboltOutlined } from '@ant-design/icons';\r\nimport Loader from './Loader'\r\n\r\nimport { useGetCryptoDetailsQuery, useGetCryptoHistoryQuery } from '../services/cryptoApi'\r\nimport LineChart from './LineChart'\r\n\r\nconst { Title, Text } = Typography;\r\nconst { Option } = Select;\r\n\r\nconst CryptoDetails = () => {\r\n    const { coinId } = useParams();\r\n    const [timePeriod, setTimePeriod] = useState('7d')\r\n    const { data, isFetching } = useGetCryptoDetailsQuery(coinId);\r\n    const { data: coinHistory } = useGetCryptoHistoryQuery({ coinId, timePeriod });\r\n    const cryptoDetails = data?.data?.coin;\r\n\r\n    if (isFetching) return <Loader />;\r\n\r\n    const time = ['3h', '24h', '7d', '30d', '1y', '3m', '3y', '5y'];\r\n\r\n    const stats = [\r\n        { title: 'Price to USD', value: `$ ${cryptoDetails.price && millify(cryptoDetails.price)}`, icon: <DollarCircleOutlined /> },\r\n        { title: 'Rank', value: cryptoDetails.rank, icon: <NumberOutlined /> },\r\n        { title: '24h Volume', value: `$ ${cryptoDetails.volume && millify(cryptoDetails.volume)}`, icon: <ThunderboltOutlined /> },\r\n        { title: 'Market Cap', value: `$ ${cryptoDetails.marketCap && millify(cryptoDetails.marketCap)}`, icon: <DollarCircleOutlined /> },\r\n        { title: 'All-time-high(daily avg.)', value: `$ ${millify(cryptoDetails.allTimeHigh.price)}`, icon: <TrophyOutlined /> },\r\n    ];\r\n\r\n    const genericStats = [\r\n        { title: 'Number Of Markets', value: cryptoDetails.numberOfMarkets, icon: <FundOutlined /> },\r\n        { title: 'Number Of Exchanges', value: cryptoDetails.numberOfExchanges, icon: <MoneyCollectOutlined /> },\r\n        { title: 'Aprroved Supply', value: cryptoDetails.approvedSupply ? <CheckOutlined /> : <StopOutlined />, icon: <ExclamationCircleOutlined /> },\r\n        { title: 'Total Supply', value: `$ ${millify(cryptoDetails.totalSupply)}`, icon: <ExclamationCircleOutlined /> },\r\n        { title: 'Circulating Supply', value: `$ ${millify(cryptoDetails.circulatingSupply)}`, icon: <ExclamationCircleOutlined /> },\r\n    ];\r\n\r\n\r\n\r\n    return (\r\n        <Col className=\"coin-detail-container\">\r\n            <Col className=\"coin-heading-container\">\r\n                <Title level={2} className=\"coin-name\">\r\n                    {cryptoDetails.name} ({cryptoDetails.slug}) Price\r\n                </Title>\r\n                <p>\r\n                    {cryptoDetails.name} live price in US dollars.\r\n                    View value statistics, market cap and supply.\r\n                </p>\r\n            </Col>\r\n            <Select\r\n                defaultValue=\"7d\"\r\n                className=\"select-timeperiod\"\r\n                placeholder=\"Select Time Period\"\r\n                onChange={(value) => setTimePeriod(value)}\r\n            >\r\n                {time.map((date) => <Option key={date}>{date}</Option>)}\r\n            </Select>\r\n            <LineChart coinHistory={coinHistory} currentPrice={millify(cryptoDetails.price)} coinName={cryptoDetails.name} />\r\n            <Col className=\"stats-container\">\r\n                <Col className=\"coin-value-statistics\">\r\n                    <Col className=\"coin-value-statistics-heading\">\r\n                        <Title level={3} className=\"coin-details-heading\">{cryptoDetails.name} Value Statistics</Title>\r\n                        <p>An overviw showing the stats of {cryptoDetails.name}</p>\r\n                    </Col>\r\n                    {stats.map(({ icon, title, value }) => (\r\n                        <Col className=\"coin-stats\">\r\n                            <Col className=\"coin-stats-name\">\r\n                                <Text>{icon}</Text>\r\n                                <Text>{title}</Text>\r\n                            </Col>\r\n                            <Text className=\"stats\">{value}</Text>\r\n                        </Col>\r\n                    ))}\r\n                </Col>\r\n                <Col className=\"other-stats-info\">\r\n                    <Col className=\"coin-value-statistics-heading\">\r\n                        <Title level={3} className=\"coin-details-heading\"> Other Statistics</Title>\r\n                        <p>An overviw showing the stats of all cryptocurrencies</p>\r\n                    </Col>\r\n                    {genericStats.map(({ icon, title, value }) => (\r\n                        <Col className=\"coin-stats\">\r\n                            <Col className=\"coin-stats-name\">\r\n                                <Text>{icon}</Text>\r\n                                <Text>{title}</Text>\r\n                            </Col>\r\n                            <Text className=\"stats\">{value}</Text>\r\n                        </Col>\r\n                    ))}\r\n                </Col>\r\n            </Col>\r\n            <Col className=\"coin-desc-link\">\r\n                <Row className=\"coin-desc\">\r\n                    <Title level={3} className=\"coin-details-heading\">\r\n                        What is {cryptoDetails.name}\r\n                        {HTMLReactParser(cryptoDetails.description)}\r\n                    </Title>\r\n                </Row>\r\n                <Col className=\"coin-links\">\r\n                    <Title level={3} className=\"coin-details-heading\">\r\n                        {cryptoDetails.name} Links\r\n                    </Title>\r\n                    {cryptoDetails.links.map((link) => (\r\n                        <Row className=\"coin-link\" key={link.name}>\r\n                            <Title level={5} className=\"link-name\">\r\n                                {link.type}\r\n                            </Title>\r\n                            <a href={link.url} target=\"_blank\" rel=\"noreferrer\">\r\n                                {link.name}\r\n                            </a>\r\n                        </Row>\r\n                    ))}\r\n                </Col>\r\n            </Col>\r\n        </Col>\r\n    )\r\n}\r\n\r\nexport default CryptoDetails\r\n","import React from 'react';\r\nimport millify from 'millify';\r\nimport { Collapse, Row, Col, Typography, Avatar } from 'antd';\r\nimport HTMLReactParser from 'html-react-parser';\r\n\r\nimport { useGetExchangesQuery } from '../services/cryptoApi';\r\nimport Loader from './Loader';\r\n\r\nconst { Text } = Typography;\r\nconst { Panel } = Collapse;\r\n\r\nconst Exchanges = () => {\r\n    const { data, isFetching } = useGetExchangesQuery();\r\n    const exchangesList = data?.data?.exchanges;\r\n\r\n    if (isFetching) return <Loader />;\r\n\r\n    return (\r\n        <>\r\n            <Row>\r\n                <Col span={6}>Exchanges</Col>\r\n                <Col span={6}>24h Trade Volume</Col>\r\n                <Col span={6}>Markets</Col>\r\n                <Col span={6}>Change</Col>\r\n            </Row>\r\n            <Row>\r\n                {exchangesList.map((exchange) => (\r\n                    <Col span={24}>\r\n                        <Collapse>\r\n                            <Panel\r\n                                key={exchange.id}\r\n                                showArrow={false}\r\n                                header={(\r\n                                    <Row key={exchange.id}>\r\n                                        <Col span={6}>\r\n                                            <Text><strong>{exchange.rank}.</strong></Text>\r\n                                            <Avatar className=\"exchange-image\" src={exchange.iconUrl} />\r\n                                            <Text><strong>{exchange.name}</strong></Text>\r\n                                        </Col>\r\n                                        <Col span={6}>${millify(exchange.volume)}</Col>\r\n                                        <Col span={6}>{millify(exchange.numberOfMarkets)}</Col>\r\n                                        <Col span={6}>{millify(exchange.marketShare)}%</Col>\r\n                                    </Row>\r\n                                )}\r\n                            >\r\n                                {HTMLReactParser(exchange.description || '')}\r\n                            </Panel>\r\n                        </Collapse>\r\n                    </Col>\r\n                ))}\r\n            </Row>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Exchanges;","import { createApi, fetchBaseQuery } from \"@reduxjs/toolkit/query/react\";\r\n\r\nconst cryptoNewsHeader = {\r\n  \"x-bingapis-sdk\": \"true\",\r\n  \"x-rapidapi-host\": \"bing-news-search1.p.rapidapi.com\",\r\n  \"x-rapidapi-key\": \"99ec60ba35msh49bc91086f1ef35p15f761jsn080e972bb370\",\r\n};\r\n\r\nconst baseUrl = \"https://bing-news-search1.p.rapidapi.com\";\r\n\r\nconst createRequest = (url) => ({ url, headers: cryptoNewsHeader });\r\n\r\nexport const cryptoNewsApi = createApi({\r\n  reducerPath: \"cryptoNewsApi\",\r\n  baseQuery: fetchBaseQuery({ baseUrl }),\r\n  endpoints: (builder) => ({\r\n    getCryptoNews: builder.query({\r\n      query: ({ newsCategory, count }) =>\r\n        createRequest(\r\n          `/news/search?q=${newsCategory}&safeSearch=Off&textFormat=Raw&freshness=Day&count=${count}`\r\n        ),\r\n    }),\r\n  }),\r\n});\r\n\r\nexport const { useGetCryptoNewsQuery } = cryptoNewsApi;\r\n","import React, { useState } from 'react'\r\nimport { Select, Typography, Row, Col, Avatar, Card } from 'antd'\r\nimport moment from 'moment'\r\n\r\nimport { useGetCryptoNewsQuery } from '../services/cryptoNewsApi'\r\nimport { useGetCryptosQuery } from '../services/cryptoApi'\r\nimport Loader from './Loader'\r\n\r\nconst { Text, Title } = Typography;\r\nconst { Option } = Select;\r\n\r\nconst demoImage = 'http://coinrevolution.com/wp-content/uploads/2020/06/cryptonews.jpg'\r\n\r\nconst News = ({ simplified }) => {\r\n    const [newsCategory, setNewsCategory] = useState('Cryptocurrency');\r\n    const { data: cryptoNews } = useGetCryptoNewsQuery({ newsCategory, count: simplified ? 6 : 12 })\r\n    const { data } = useGetCryptosQuery(100);\r\n\r\n\r\n    if (!cryptoNews?.value) return <Loader />;\r\n    return (\r\n        <Row gutter={[24, 24]}>\r\n            {!simplified && (\r\n                <Col span={24}>\r\n                    <Select\r\n                        showSearch\r\n                        className=\"select-news\"\r\n                        placeholder=\"Select a Crypto\"\r\n                        optionFilterProp=\"children\"\r\n                        onChange={(value) => setNewsCategory(value)}\r\n                        filterOption={(input, option) => option.children.tolowerCase().indexOf(input.toLowerCase()) >= 0}\r\n                    >\r\n                        <Option value=\"Cryptocurrency\">Cryptocurrency</Option>\r\n                        {data?.data?.coins.map((coin) => <Option value={coin.name}>{coin.name}</Option>)}\r\n                    </Select>\r\n                </Col>\r\n            )}\r\n            {cryptoNews.value.map((news, i) => (\r\n                <Col xs={24} sm={12} lg={8} key={i}>\r\n                    <Card hoverable className=\"news-card\">\r\n                        <a href={news.url} target=\"_blank\" rel=\"noreferrer\">\r\n                            <div className=\"news-image-container\">\r\n                                <Title className=\"news-title\" level={4}>{news.name}</Title>\r\n                                <img style={{ maxWidth: '200px', maxHeight: '200px' }} src={news?.image?.thumbnail?.contentUrl || demoImage} alt=\"\" />\r\n                            </div>\r\n                            <p>\r\n                                {news.description > 100 ? `${news.description.substring(0, 100)}...` : news.description}\r\n                            </p>\r\n                            <div className=\"provider-container\">\r\n                                <div>\r\n                                    <Avatar src={news.provider[0]?.image?.thumbnail?.contentUrl || demoImage} alt=\"news\" />\r\n                                    <Text className=\"provider-name\">{news.provider[0]?.name}</Text>\r\n                                </div>\r\n                                <Text>{moment(news.datePublished).startOf('ss').fromNow()}</Text>\r\n                            </div>\r\n                        </a>\r\n                    </Card>\r\n                </Col>\r\n            ))}\r\n        </Row>\r\n    )\r\n}\r\n\r\nexport default News\r\n","import React from \"react\";\r\nimport { Switch, Route, Link } from \"react-router-dom\";\r\nimport { Layout, Typography, Space } from \"antd\";\r\n\r\nimport {\r\n  Navbar,\r\n  Homepage,\r\n  Exchanges,\r\n  Cryptocurrencies,\r\n  CryptoDetails,\r\n  News,\r\n} from \"./components\";\r\nimport \"./App.css\";\r\n\r\nconst App = () => {\r\n  return (\r\n    <div className=\"app\">\r\n      <div className=\"navbar\">\r\n        <Navbar />\r\n      </div>\r\n      <div className=\"main\">\r\n        <Layout>\r\n          <div className=\"routes\">\r\n            <Switch>\r\n              <Route exact path=\"/\">\r\n                <Homepage />\r\n              </Route>\r\n              <Route exact path=\"/exchanges\">\r\n                <Exchanges />\r\n              </Route>\r\n              <Route exact path=\"/Cryptocurrencies\">\r\n                <Cryptocurrencies />\r\n              </Route>\r\n              <Route exact path=\"/crypto/:coinId\">\r\n                <CryptoDetails />\r\n              </Route>\r\n              <Route exact path=\"/news\">\r\n                <News />\r\n              </Route>\r\n            </Switch>\r\n          </div>\r\n        </Layout>\r\n        <div className=\"footer\">\r\n          <Typography.Title\r\n            level={5}\r\n            style={{ color: \"white\", textAlign: \"center\" }}\r\n          >\r\n            Cryptoverse <br />\r\n            All rights reserved\r\n          </Typography.Title>\r\n          <Space>\r\n            <Link to=\"/\">Home</Link>\r\n            <Link to=\"/exchanges\">Exchanges</Link>\r\n            <Link to=\"/news\">News</Link>\r\n          </Space>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import { configureStore } from \"@reduxjs/toolkit\";\r\n\r\nimport { cryptoApi } from \"../services/cryptoApi\";\r\nimport { cryptoNewsApi } from \"../services/cryptoNewsApi\";\r\n\r\nexport default configureStore({\r\n  reducer: {\r\n    [cryptoApi.reducerPath]: cryptoApi.reducer,\r\n    [cryptoNewsApi.reducerPath]: cryptoNewsApi.reducer,\r\n  },\r\n});\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { BrowserRouter as Router } from \"react-router-dom\";\r\nimport { Provider } from \"react-redux\";\r\n\r\nimport App from \"./App\";\r\nimport store from \"./app/store\";\r\nimport \"antd/dist/antd.css\";\r\n\r\nReactDOM.render(\r\n  <Router>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  </Router>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}